# THIS FILE IS AUTOMATICALLY GENERATED BY CARGO
#
# When uploading crates to the registry Cargo will automatically
# "normalize" Cargo.toml files for maximal compatibility
# with all versions of Cargo and also rewrite `path` dependencies
# to registry (e.g., crates.io) dependencies.
#
# If you are reading this file be aware that the original Cargo.toml
# will likely look very different (and much more reasonable).
# See Cargo.toml.orig for the original contents.

[package]
edition = "2021"
name = "unc-vm-runner"
version = "0.1.0"
authors = ["Unc Inc <hello@uncprotocol.com>"]
publish = true
description = "This crate implements the specification of the interface that unc blockchain exposes to the smart contracts."
readme = "README.md"
categories = ["wasm"]
license = "MIT OR Apache-2.0"
repository = "https://github.com/utnet-org/utility"

[package.metadata.cargo-udeps.ignore]
normal = ["cached"]

[dependencies.anyhow]
version = "1.0.62"
optional = true

[dependencies.base64]
version = "0.21"

[dependencies.bn]
version = "0.5.11"
default-features = false
package = "zeropool-bn"

[dependencies.borsh]
version = "1.0.0"
features = [
    "derive",
    "rc",
]

[dependencies.ed25519-dalek]
version = "2.1.0"
features = [
    "hazmat",
    "rand_core",
]
default-features = false

[dependencies.enum-map]
version = "2.1.0"

[dependencies.finite-wasm]
version = "0.5.0"
features = ["instrument"]

[dependencies.loupe]
version = "0.1"

[dependencies.memoffset]
version = "0.8"

[dependencies.num-rational]
version = "0.3.1"
features = ["serde"]

[dependencies.once_cell]
version = "1.13.1"

[dependencies.parity-wasm]
version = "0.42"
default-features = false

[dependencies.parity-wasm_41]
version = "0.41"
package = "parity-wasm"

[dependencies.prefix-sum-vec]
version = "0.1.2"

[dependencies.pwasm-utils_12]
version = "0.12"
package = "pwasm-utils"

[dependencies.ripemd]
version = "0.1.1"

[dependencies.serde]
version = "1.0.136"
features = [
    "alloc",
    "derive",
    "rc",
]

[dependencies.serde_repr]
version = "0.1.8"

[dependencies.serde_with]
version = "3.0"
features = ["base64"]

[dependencies.sha2]
version = "0.10"

[dependencies.sha3]
version = "0.10"

[dependencies.stdx]
version = "0.1.0"
package = "unc-stdx"

[dependencies.strum]
version = "0.24"
features = ["derive"]

[dependencies.thiserror]
version = "1.0.30"

[dependencies.tracing]
version = "0.1.36"
features = ["std"]

[dependencies.unc-crypto]
version = "0.1.0"

[dependencies.unc-parameters]
version = "0.1.0"

[dependencies.unc-primitives-core]
version = "0.1.0"

[dependencies.wasm-encoder]
version = "0.27.0"

[dependencies.wasmparser]
version = "0.78"

[dependencies.wasmtime]
version = "14.0.4"
features = ["cranelift"]
optional = true
default-features = false

[dev-dependencies.arbitrary]
version = "1.2.3"
features = ["derive"]

[dev-dependencies.assert_matches]
version = "1.5.0"

[dev-dependencies.bolero]
version = "0.10.0"
features = ["arbitrary"]

[dev-dependencies.expect-test]
version = "1.3.0"

[dev-dependencies.hex]
version = "0.4.2"
features = ["serde"]

[dev-dependencies.rand]
version = "0.8.5"

[dev-dependencies.serde_json]
version = "1.0.68"
features = ["preserve_order"]

[dev-dependencies.wasm-smith]
version = "0.10"

[dev-dependencies.wasmprinter]
version = "0.2"

[dev-dependencies.wat]
version = "1.0.40"

[features]
costs_counting = []
default = [
    "wasmer0_vm",
    "wasmtime_vm",
    "wasmer2_vm",
    "unc_vm",
]
io_trace = []
nightly = [
    "nightly_protocol",
    "protocol_feature_fix_contract_loading_cost",
    "unc-parameters/nightly",
    "unc-primitives-core/nightly",
]
nightly_protocol = [
    "unc-parameters/nightly_protocol",
    "unc-primitives-core/nightly_protocol",
]
no_cache = []
no_cpu_compatibility_checks = []
protocol_feature_fix_contract_loading_cost = ["unc-primitives-core/protocol_feature_fix_contract_loading_cost"]
sandbox = []
unc_vm = [
    "unc-vm-compiler",
    "unc-vm-compiler-singlepass",
    "unc-vm-engine",
    "unc-vm-types",
    "unc-vm-vm",
]
wasmer0_vm = [
    "wasmer-runtime",
    "wasmer-runtime-core",
]
wasmer2_vm = [
    "wasmer-compiler",
    "wasmer-compiler-singlepass",
    "wasmer-engine",
    "wasmer-engine-universal",
    "wasmer-types",
    "wasmer-vm",
]
wasmtime_vm = [
    "wasmtime",
    "anyhow",
]

[target."cfg(target_arch = \"x86_64\")".dependencies.unc-vm-compiler]
version = "0.1.0"
optional = true

[target."cfg(target_arch = \"x86_64\")".dependencies.unc-vm-compiler-singlepass]
version = "0.1.0"
optional = true

[target."cfg(target_arch = \"x86_64\")".dependencies.unc-vm-engine]
version = "0.1.0"
optional = true

[target."cfg(target_arch = \"x86_64\")".dependencies.unc-vm-types]
version = "0.1.0"
optional = true

[target."cfg(target_arch = \"x86_64\")".dependencies.unc-vm-vm]
version = "0.1.0"
optional = true

[target."cfg(target_arch = \"x86_64\")".dependencies.wasmer-compiler]
version = "=2.4.1"
optional = true
package = "wasmer-compiler-near"

[target."cfg(target_arch = \"x86_64\")".dependencies.wasmer-compiler-singlepass]
version = "=2.4.1"
optional = true
package = "wasmer-compiler-singlepass-near"

[target."cfg(target_arch = \"x86_64\")".dependencies.wasmer-engine]
version = "=2.4.1"
optional = true
package = "wasmer-engine-near"

[target."cfg(target_arch = \"x86_64\")".dependencies.wasmer-engine-universal]
version = "=2.4.1"
features = ["compiler"]
optional = true
package = "wasmer-engine-universal-near"

[target."cfg(target_arch = \"x86_64\")".dependencies.wasmer-runtime]
version = "0.18.0"
features = ["default-backend-singlepass"]
optional = true
default-features = false
package = "wasmer-runtime-near"

[target."cfg(target_arch = \"x86_64\")".dependencies.wasmer-runtime-core]
version = "0.18.2"
optional = true
package = "wasmer-runtime-core-near"

[target."cfg(target_arch = \"x86_64\")".dependencies.wasmer-types]
version = "=2.4.1"
optional = true
package = "wasmer-types-near"

[target."cfg(target_arch = \"x86_64\")".dependencies.wasmer-vm]
version = "=2.4.1"
optional = true
package = "wasmer-vm-near"

[lints.clippy]
clone_on_copy = "deny"
derivable_impls = "deny"
len_zero = "deny"
redundant_clone = "deny"
single_char_pattern = "allow"

[lints.clippy.all]
level = "allow"
priority = -100

[lints.clippy.correctness]
level = "deny"
priority = -50

[lints.clippy.perf]
level = "deny"
priority = -50

[lints.clippy.suspicious]
level = "deny"
priority = -50

[lints.rust]
warnings = "deny"
